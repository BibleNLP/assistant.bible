version: '3.9'
services:
  chatbot:
    build:
     context: ..
     dockerfile: ./deployment/Dockerfile
    healthcheck:
     timeout: 45s
     interval: 10s
     retries: 10
    environment:
     - OPENAI_API_KEY=${OPENAI_API_KEY}
     - WEBSOCKET_URL=${WEBSOCKET_URL:-"ws://localhost/chat"}
     - CHATBOT_ACCESS_TOKEN=${CHATBOT_ACCESS_TOKEN}
     - DOMAIN=${DOMAIN:-"localhost:9000"}
     - POSTGRES_DB_USER=${POSTGRES_DB_USER:-admin}
     - POSTGRES_DB_PASSWORD=${POSTGRES_DB_PASSWORD:-secret}
     - POSTGRES_DB_NAME=${POSTGRES_DB_NAME:-adotbcollection}
     - POSTGRES_DB_HOST=postgresvectordb
     - POSTGRES_DB_PORT=5432
    command: uvicorn main:app --host 0.0.0.0 --port 9000 --workers 1
    logging:
     options:
      max-size: 10m
      max-file: "3"
    restart: always
    expose:
     - 9000
    # ports:
    #   - 9000:9000
    depends_on:
      - postgresvectordb
    volumes:
     - logs-vol:/app/logs
     - chroma-db:/app/app/chromadb_store
    networks:
     - chatbot-network

  postgresvectordb:
    image: ankane/pgvector
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD:-secret}
      - POSTGRES_USER=${POSTGRES_DB_USER:-admin}
      - POSTGRES_DB=${POSTGRES_DB_NAME:-adotbcollection}
      - POSTGRES_HOST_AUTH_METHOD=md5
    restart: always
    expose:
      - 5432
    networks:
     - chatbot-network
    volumes:
     - postgres-db-vol:/var/lib/postgresql/data
     - postgres-db-backup:/var/backups:rw
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.backup.schedule: "0 0 0 * * *" #"Takes a single dump within the db container every day at 00:00 am"
      ofelia.job-exec.backup.command: "pg_dump --dbname=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB  --file=/var/backups/postgres_backup_latest.sql"

  webserver:
    image: nginx:latest
    ports:
     - 80:80
     - 443:443
    restart: always
    expose:
     - 80
     - 443
    depends_on:
     - chatbot
    environment:
      - CHAT_DOMAIN=${DOMAIN:-"localhost"}
    volumes:
     - ./nginx/nginx.conf.template:/etc/nginx/templates/default.conf.template:ro
     # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
     -  logs-vol:/var/log/nginx/
     - ./certbot/www:/var/www/certbot/:ro
     - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
     - chatbot-network

  certbot:
    image: certbot/certbot:latest
    volumes:
     - ./certbot/www/:/var/www/certbot/:rw
     - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
     - chatbot-network

  ofelia-scheduler:
    image: mcuadros/ofelia:v0.3.7
    depends_on:
      - postgresvectordb
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - postgres-db-backup:/var/backups:ro
      - ./backup:/var/backup-copies/:rw
      - logs-vol:/app/logs
    environment:
      - TZ=${TIMEZONE:-Asia/Calcutta}
    labels:
      ofelia.job-local.copy-backup-daily.schedule: "0 0 3 * * *" # Copies latest dump from DB container every day at 03:00 am
      ofelia.job-local.copy-backup-daily.command: sh -c "cp /var/backups/postgres_backup_latest.sql /var/backup-copies/postgres_backup_daily_`date +%Y-%m-%d_%H_%M_%S`.sql && echo `date`':Daily backup successful' >> /app/logs/backup.log || echo `date`':Daily backup failed' >> /app/logs/backup.log"
      ofelia.job-local.prune-daily-backup.schedule: "0 0 0 * * *" # Retains only latest 7 of the daily backups 
      ofelia.job-local.prune-daily-backup.command: sh -c "ls -tr /var/backup-copies/postgres_backup_daily* | head -n -7 |  xargs rm -f -- && echo `date`':Daily Prune successful' >> /app/logs/backup.log || echo `date`':Daily Prune failed' >> /app/logs/backup.log"
      ofelia.job-local.copy-backup-weekly.schedule: "0 0 3 ? * SUN" # Copies latest dump on every sunday 03:00 am
      ofelia.job-local.copy-backup-weekly.command: sh -c "cp /var/backups/postgres_backup_latest.sql /var/backup-copies/postgres_backup_weekly_`date +%Y-%m-%d_%H_%M_%S`.sql && echo `date`':Weekly backup successful' >> /app/logs/backup.log || echo `date`':Weekly backup failed' >> /app/logs/backup.log"
      ofelia.job-local.prune-weekly-backup.schedule: "0 0 0 ? * SUN" # Retains only latest 4 of the weekly backups
      ofelia.job-local.prune-weekly-backup.command: sh -c "ls -tr /var/backup-copies/postgres_backup_weekly* | head -n -4 |  xargs rm -f -- && echo `date`':Weekly Prune successful' >> /app/logs/backup.log || echo `date`':Weekly Prune failed' >> /app/logs/backup.log"
      ofelia.job-local.copy-backup-monthly.schedule: "0 0 3 1 * *" # Copies latest dump on first day of every month
      ofelia.job-local.copy-backup-monthly.command: sh -c "cp /var/backups/postgres_backup_latest.sql /var/backup-copies/postgres_backup_monthly_`date +%Y-%m-%d_%H_%M_%S`.sql && echo `date`':Monthly backup successful' >> /app/logs/backup.log || echo `date`':Monthly backup failed' >> /app/logs/backup.log"
      ofelia.job-local.prune-monthly-backup.schedule: "0 0 0 1 * *" # Retains only latest 12 of the montly dumps
      ofelia.job-local.prune-monthly-backup.command: sh -c "ls -tr /var/backup-copies/postgres_backup_monthly* | head -n -12 |  xargs rm -f -- && echo `date`':Monthly Prune successful' >> /app/logs/backup.log || echo `date`':Monthly Prune failed' >> /app/logs/backup.log"
      ofelia.job-local.copy-backup-yearly.schedule: "0 0 3 * JAN *" # Copies latest dump on first day of every year
      ofelia.job-local.copy-backup-yearly.command: sh -c "cp /var/backups/postgres_backup_latest.sql /var/backup-copies/postgres_backup_yearly_`date +%Y-%m-%d_%H_%M_%S`.sql && echo `date`':Yearly backup successful' >> /app/logs/backup.log || echo `date`':Yearly backup failed' >> /app/logs/backup.log"
    networks:
     - chatbot-network

networks:
   chatbot-network:
volumes:
  logs-vol:
  chroma-db:
  postgres-db-vol:
  postgres-db-backup: